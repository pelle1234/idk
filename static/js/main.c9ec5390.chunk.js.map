{"version":3,"sources":["Weather.js","requests.js","App.js","index.js"],"names":["Weather","props","formatDay","timestamp","datetime","Date","getDate","getMonth","formatTime","hours","getHours","minutes","getMinutes","changeFocusedForecast","forecast","setState","focusedForecastDt","dt","state","forecasts","Promise","resolve","fetch","process","then","response","status","Error","json","catch","error","console","warn","list","className","key","onClick","this","Math","round","main","temp","src","weather","icon","alt","log","focusedWeather","find","f","description","map","renderWeatherItem","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiFiBA,G,wDA5Ef,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,UAAY,SAAAC,GACV,IAAMC,EAAW,IAAIC,KAAe,IAAVF,GAG1B,OAFYC,EAASE,UAER,KADCF,EAASG,WAAY,IAjBlB,EAqBnBC,WAAa,SAAAL,GACX,IAAMC,EAAW,IAAIC,KAAe,IAAVF,GACpBM,EAAQL,EAASM,WACnBC,EAAUP,EAASQ,aAIvB,OAHGD,EAAS,KACVA,EAAU,IAAMA,GAEXF,EAAQ,IAAME,GA5BJ,EA0CrBE,sBAAwB,SAAAC,GACtB,EAAKC,SAAS,CAACC,kBAAmBF,EAASG,MAzCzC,EAAKC,MAAQ,CACXC,UAAW,KACXH,kBAAmB,MAJJ,E,gEAQE,IAAD,OCXW,IAAII,SAAQ,SAAAC,GAC3CC,MAAM,mEAAD,OAHgBC,mCAGhB,0BACJC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,MAAM,IAAIC,MAAMF,EAASC,QACtD,OAAOD,EAASG,UAEjBJ,MAAK,SAAAC,GACJJ,EAAQI,MAETI,OAAM,SAAAC,GACLC,QAAQC,KAAKF,SDECN,MAAK,SAAAL,GACjB,EAAKJ,SAAS,CAAEI,UAAWA,EAAWH,kBAAmBG,EAAUc,KAAK,GAAGhB,U,wCAqB7DH,GAAW,IAAD,OAC1B,OACE,yBAAKoB,UAAU,cAAcC,IAAKrB,EAASG,GAAImB,QAAS,kBAAM,EAAKvB,sBAAsBC,KACvF,yBAAKoB,UAAU,eAAeG,KAAKnC,UAAUY,EAASG,KACtD,yBAAKiB,UAAU,gBAAgBG,KAAK7B,WAAWM,EAASG,KACxD,yBAAKiB,UAAU,gBAAgBI,KAAKC,MAAMzB,EAAS0B,KAAKC,MAAxD,QACA,yBAAKC,IAAK,oCAAoC5B,EAAS6B,QAAQ,GAAGC,KAAK,OAAQC,IAAI,Y,+BAQ/E,IAAD,OACD1B,EAAYkB,KAAKnB,MAAMC,UACvBH,EAAoBqB,KAAKnB,MAAMF,kBACrC,IAAIG,EAAW,OAAO,KACtBY,QAAQe,IAAI3B,GAEZ,IAAM4B,EAAiB5B,EAAUc,KAAKe,MAAK,SAAAC,GAAC,OAAGA,EAAEhC,KAAOD,KAGxD,OAFAe,QAAQe,IAAIC,GAGV,yBAAKb,UAAU,WACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,eAAeG,KAAKnC,UAAU6C,EAAe9B,KAC9D,yBAAKiB,UAAU,gBAAgBG,KAAK7B,WAAWuC,EAAe9B,KAC9D,yBAAKiB,UAAU,gBAAgBa,EAAeP,KAAKC,KAAnD,QACA,yBAAKP,UAAU,gBAAgBI,KAAKC,MAAMQ,EAAeP,KAAKC,OAC9D,yBAAKP,UAAU,gBAAgBa,EAAeJ,QAAQ,GAAGO,aACzD,yBAAKR,IAAK,oCAAqCK,EAAeJ,QAAQ,GAAGC,KAAK,OAAQC,IAAI,UAGxF,yBAAKX,UAAU,oBAEbf,EAAUc,KAAKkB,KAAI,SAAArC,GAAQ,OAAI,EAAKsC,kBAAkBtC,Y,GApE5CuC,c,MEYPC,MAZf,WACE,OACE,yBAAKpB,UAAU,OACf,4BAAQA,UAAU,cAAlB,aAGA,kBAAC,EAAD,MAJA,WCDJqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c9ec5390.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {getForecast} from './requests'\r\nimport './Weather.css'\r\n\r\nclass Weather extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      forecasts: null,\r\n      focusedForecastDt: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    getForecast().then(forecasts => {\r\n      this.setState({ forecasts: forecasts, focusedForecastDt: forecasts.list[0].dt})\r\n    })\r\n  }\r\n\r\n  formatDay = timestamp => {\r\n    const datetime = new Date(timestamp*1000)\r\n    const day = datetime.getDate()\r\n    const month = datetime.getMonth() +1\r\n    return day + '.' + month\r\n  }\r\n\r\n  formatTime = timestamp => {\r\n    const datetime = new Date(timestamp*1000)\r\n    const hours = datetime.getHours()\r\n    let minutes = datetime.getMinutes()\r\n    if(minutes <10) {\r\n      minutes = '0' + minutes\r\n    }\r\n    return hours + ':' + minutes\r\n  }\r\n\r\n  renderWeatherItem(forecast) {\r\n    return (\r\n      <div className=\"Weather_box\" key={forecast.dt} onClick={() => this.changeFocusedForecast(forecast)}>\r\n        <div className=\"Weather_day\">{this.formatDay(forecast.dt)}</div>\r\n        <div className=\"Weather_time\">{this.formatTime(forecast.dt)}</div>\r\n        <div className=\"Weather_temp\">{Math.round(forecast.main.temp)}째</div>\r\n        <img src={'http://openweathermap.org/img/wn/'+forecast.weather[0].icon+'.png'} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n  }\r\n\r\nchangeFocusedForecast = forecast => {\r\n  this.setState({focusedForecastDt: forecast.dt})\r\n}\r\n  render() {\r\n    const forecasts = this.state.forecasts\r\n    const focusedForecastDt = this.state.focusedForecastDt\r\n    if(!forecasts) return null\r\n    console.log(forecasts)\r\n\r\n    const focusedWeather = forecasts.list.find(f=> f.dt === focusedForecastDt)\r\n    console.log(focusedWeather)\r\n\r\n    return (\r\n      <div className=\"Weather\">\r\n        <div className=\"Weather_focused\">\r\n          <div className=\"Weather_day\">{this.formatDay(focusedWeather.dt)}</div>\r\n        <div className=\"Weather_time\">{this.formatTime(focusedWeather.dt)}</div>\r\n        <div className=\"Weather_temp\">{focusedWeather.main.temp}째</div>\r\n        <div className=\"Weather_temp\">{Math.round(focusedWeather.main.temp)}</div>\r\n        <div className=\"Weather_desc\">{focusedWeather.weather[0].description}</div>\r\n        <img src={'http://openweathermap.org/img/wn/' +focusedWeather.weather[0].icon+'.png'} alt=\"Logo\" />\r\n        </div>\r\n\r\n          <div className=\"Weather_forecast\">\r\n\r\n          { forecasts.list.map(forecast => this.renderWeatherItem(forecast)) }\r\n\r\n          </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  export default Weather\r\n","export const API_KEY = process.env.REACT_APP_KEY\r\n\r\nexport const getForecast = () => new Promise(resolve => {\r\n  fetch(`http://api.openweathermap.org/data/2.5/forecast?id=658225&APPID=${API_KEY}&units=metric&lang=fi`)\r\n  .then(response => {\r\n    if (response.status !== 200) throw new Error(response.status)\r\n    return response.json()\r\n  })\r\n  .then(response => {\r\n    resolve(response)\r\n  })\r\n  .catch(error =>{\r\n    console.warn(error)\r\n  })\r\n})\r\n","import React from 'react';\nimport Weather from './Weather'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n    s채채\n    </header>\n    <Weather/>\n    peruna\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}